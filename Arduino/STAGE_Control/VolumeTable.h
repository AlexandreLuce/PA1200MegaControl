/*******************************************************
*
*
* Volume table for control volume fonction
* 
* 
*******************************************************/

const byte ADVol[81][12] = {     
                          {0,0,0,0,0,0,0,0,0,0,0,0}, //0
                          {0,0,0,0,0,0,0,1,0,1,0,0}, //20
					                {0,0,0,0,0,0,1,0,1,0,0,1}, //41
                          {0,0,0,0,0,0,1,1,1,1,0,1}, //61
                          {0,0,0,0,0,1,0,1,0,0,1,0}, //82
                          {0,0,0,0,0,1,1,0,0,1,1,1}, //103
					                {0,0,0,0,0,1,1,1,1,0,1,1}, //123
                          {0,0,0,0,1,0,0,1,0,0,0,1}, //145
                          {0,0,0,0,1,0,1,0,0,1,0,0}, //164
                          {0,0,0,0,1,0,1,1,1,0,1,0}, //186
						              {0,0,0,0,1,1,0,0,1,1,0,1}, //205
                          {0,0,0,0,1,1,1,0,0,0,1,1}, //227
                          {0,0,0,0,1,1,1,1,0,1,1,0}, //246
                          {0,0,0,1,0,0,0,0,1,1,0,0}, //268
					                {0,0,0,1,0,0,0,1,1,1,1,1}, //287
                          {0,0,0,1,0,0,1,1,0,1,0,1}, //309
                          {0,0,0,1,0,1,0,0,1,0,0,0}, //328
                          {0,0,0,1,0,1,0,1,1,1,0,1}, //349
						              {0,0,0,1,0,1,1,1,0,0,0,1}, //369
                          {0,0,0,1,1,0,0,0,0,1,1,0}, //390
                          {0,0,0,1,1,0,0,1,1,0,1,0}, //410
						              {0,0,0,1,1,1,0,0,0,0,1,1}, //451
                          {0,0,0,1,1,1,1,0,1,0,1,1}, //491
						              {0,0,1,0,0,0,0,1,0,1,0,0}, //532
                          {0,0,1,0,0,0,1,1,1,1,0,1}, //573
					            	  {0,0,1,0,0,1,1,0,0,1,1,0}, //614
                          {0,0,1,0,1,0,0,0,1,1,1,1}, //655
				            		  {0,0,1,0,1,0,1,1,1,0,0,0}, //696
                          {0,0,1,0,1,1,1,0,0,0,0,1}, //737
				             		  {0,0,1,1,0,0,0,0,1,0,1,0}, //778
                          {0,0,1,1,0,0,1,1,0,0,1,1}, //819
					             	  {0,0,1,1,0,1,0,1,1,1,0,0}, //860
                          {0,0,1,1,1,0,0,0,0,1,0,1}, //901
						              {0,0,1,1,1,0,1,0,1,1,1,0}, //942
                          {0,0,1,1,1,1,0,1,0,1,1,1}, //983
						              {0,1,0,0,0,0,0,0,0,0,0,0}, //1024
                          {0,1,0,0,0,0,1,0,1,0,0,1}, //1065
						              {0,1,0,0,0,1,0,1,0,0,1,0}, //1106
                          {0,1,0,0,0,1,1,1,1,0,1,1}, //1147
						              {0,1,0,0,1,0,1,0,0,1,0,0}, //1188
                          {0,1,0,0,1,1,0,0,1,1,0,1}, //1229
						              {0,1,0,0,1,1,1,1,0,1,1,0}, //1270
                          {0,1,0,1,0,0,0,1,1,1,1,0}, //1310
						              {0,1,0,1,0,1,0,0,0,1,1,1}, //1351
                          {0,1,0,1,0,1,1,1,0,0,0,0}, //1392
						              {0,1,0,1,1,0,0,1,1,0,0,1}, //1433
                          {0,1,0,1,1,1,0,0,0,0,1,0}, //1474
						              {0,1,0,1,1,1,1,0,1,0,1,1}, //1515
                          {0,1,1,0,0,0,0,1,0,1,0,0}, //1556
						              {0,1,1,0,0,0,1,1,1,1,0,1}, //1597
                          {0,1,1,0,0,1,1,0,0,1,1,0}, //1638
                          {0,1,1,0,1,0,1,1,1,0,0,0}, //1720
                          {0,1,1,1,0,0,0,0,1,0,1,0}, //1802
                          {0,1,1,1,0,1,0,1,1,1,0,0}, //1884
                          {0,1,1,1,1,0,1,0,1,1,1,0}, //1966
                          {1,0,0,0,0,0,0,0,0,0,0,0}, //2048
                          {1,0,0,0,0,1,0,1,0,0,0,1}, //2129
                          {1,0,0,0,1,0,1,0,0,0,1,1}, //2211
                          {1,0,0,0,1,1,1,1,0,1,0,1}, //2293
                          {1,0,0,1,0,1,0,0,0,1,1,1}, //2375
                          {1,0,0,1,1,0,0,1,1,0,0,1}, //2457
                          {1,0,0,1,1,1,1,0,1,0,1,1}, //2539
                          {1,0,1,0,0,0,1,1,1,1,0,1}, //2631
                          {1,0,1,0,1,0,0,0,1,1,1,1}, //2703
                          {1,0,1,0,1,1,1,0,0,0,0,1}, //2785
                          {1,0,1,1,0,0,1,1,0,0,1,1}, //2867
                          {1,0,1,1,1,0,0,0,0,1,0,0}, //2948
                          {1,0,1,1,1,1,0,1,0,1,1,0}, //3030
                          {1,1,0,0,0,0,1,0,1,0,0,0}, //3112
                          {1,1,0,0,0,1,1,1,1,0,1,0}, //3194
                          {1,1,0,0,1,1,0,0,1,1,0,0}, //3276
                          {1,1,0,1,0,0,0,1,1,1,1,0}, //3358
                          {1,1,0,1,0,1,1,1,0,0,0,0}, //3440
                          {1,1,0,1,1,1,0,0,0,0,1,0}, //3522
                          {1,1,1,0,0,0,0,1,0,1,0,0}, //3604
                          {1,1,1,0,0,1,1,0,0,1,1,0}, //3686
                          {1,1,1,0,1,0,1,1,0,1,1,1}, //3767
                          {1,1,1,1,0,0,0,0,1,0,0,1}, //3849
                          {1,1,1,1,0,1,0,1,1,0,1,1}, //3931
                          {1,1,1,1,1,0,1,0,1,1,0,1}, //4013
                          {1,1,1,1,1,1,1,1,1,1,1,1}, //4095
                          };



/*******************************************************
*
*
* Replace Table fonction
* 
* 
*******************************************************/

void replaceVolTable()
{
int myNum = 50;
int zeros = String(myNum,BIN).length();//This will check for the length of myNum in binary.
Serial.println(zeros); //For myNum = 50. You will get a 6.
delay(1000);

String myStr;
for (int i=0; i < 16 - zeros; i++) {//This will add zero to string as need
myStr = myStr + "0";
}
myStr = myStr + String(myNum,BIN);//Gives 0000000000110010
Serial.println(myStr);
delay(1000);
}
